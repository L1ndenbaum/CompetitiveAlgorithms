#include "../../Heads/Head.h"
/*
小素数的判定：
当n<=1e12时，用试除法,用[2,sqrt(n)]所有数除n,都不能整除就是素数。
时间复杂度O(n)
*/
bool IsPrime_SmallNumber(ll n)
{
    if(n<=1)
        return false;
    for (long long i = 2; i <= sqrt(n);i++)
        if(n%i==0)
            return false;
    return true;
}

/*
大素数的判定：

费马小定理:设n是素数,a是正整数且与n互素(两个数的最大公约数是1，它们就是互素的)，那么a^(n-1)与1在对p取模时同余，即 a^(n-1) ≡ 1 (mod n)
费马小定理的逆命题几乎成立。

费马素性测试：测试n是否为素数，在1-n内任选一个随机的基值a(a不需要与n互素)
[1]如果a^(n-1) ≡ 1 (mod n)不成立，那么n肯定不是素数(费马小定理逆否命题)
[2]如果a^(n-1) ≡ 1 (mod n)成立，那么n很大概率是素数，尝试的a越多，n是素数的可能性越大
费马素性测试不是完全正确的，一些合数(Carmichael数)不论a选什么都可以通过测试，但这些数分布很少(前三个是561,1105,1729)
前一亿个正整数中只有255个。
*/